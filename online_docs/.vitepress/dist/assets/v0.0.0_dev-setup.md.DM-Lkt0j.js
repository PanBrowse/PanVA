import{_ as e,c as a,o as t,a4 as i}from"./chunks/framework.DonzCgw1.js";const k=JSON.parse('{"title":"Development Guide","description":"","frontmatter":{},"headers":[],"relativePath":"v0.0.0/dev-setup.md","filePath":"v0.0.0/dev-setup.md","lastUpdated":1713907597000}'),s={name:"v0.0.0/dev-setup.md"},o=i('<h1 id="development-guide" tabindex="-1">Development Guide <a class="header-anchor" href="#development-guide" aria-label="Permalink to &quot;Development Guide&quot;">​</a></h1><h2 id="recommended-ide-setup" tabindex="-1">Recommended IDE Setup <a class="header-anchor" href="#recommended-ide-setup" aria-label="Permalink to &quot;Recommended IDE Setup&quot;">​</a></h2><p><a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">VSCode</a> + <a href="https://marketplace.visualstudio.com/items?itemName=Vue.volar" target="_blank" rel="noreferrer">Volar</a> (and disable Vetur) + <a href="https://marketplace.visualstudio.com/items?itemName=Vue.vscode-typescript-vue-plugin" target="_blank" rel="noreferrer">TypeScript Vue Plugin (Volar)</a>.</p><h2 id="type-support-for-vue-imports-in-ts" tabindex="-1">Type Support for <code>.vue</code> Imports in TS <a class="header-anchor" href="#type-support-for-vue-imports-in-ts" aria-label="Permalink to &quot;Type Support for `.vue` Imports in TS&quot;">​</a></h2><p>TypeScript cannot handle type information for <code>.vue</code> imports by default, so we replace the <code>tsc</code> CLI with <code>vue-tsc</code> for type checking. In editors, we need <a href="https://marketplace.visualstudio.com/items?itemName=Vue.vscode-typescript-vue-plugin" target="_blank" rel="noreferrer">TypeScript Vue Plugin (Volar)</a> to make the TypeScript language service aware of <code>.vue</code> types.</p><p>If the standalone TypeScript plugin doesn&#39;t feel fast enough to you, Volar has also implemented a <a href="https://github.com/johnsoncodehk/volar/discussions/471#discussioncomment-1361669" target="_blank" rel="noreferrer">Take Over Mode</a> that is more performant. You can enable it by the following steps:</p><ol><li>Disable the built-in TypeScript Extension <ol><li>Run <code>Extensions: Show Built-in Extensions</code> from VSCode&#39;s command palette</li><li>Find <code>TypeScript and JavaScript Language Features</code>, right click and select <code>Disable (Workspace)</code></li></ol></li><li>Reload the VSCode window by running <code>Developer: Reload Window</code> from the command palette.</li></ol><h2 id="project-setup" tabindex="-1">Project Setup <a class="header-anchor" href="#project-setup" aria-label="Permalink to &quot;Project Setup&quot;">​</a></h2><p>We use <a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noreferrer">nvm</a> to use a specific node version when developing.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> use</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ci</span></span></code></pre></div><p>When nvm is installed correctly, the version defined in <code>.nvmrc</code> should be automatically loaded when a terminal is opened in the <code>frontend</code> directory. If not, you need to run <code>nvm use</code> before running <code>npm</code> commands.</p><h3 id="compile-and-hot-reload-for-development" tabindex="-1">Compile and Hot-Reload for Development <a class="header-anchor" href="#compile-and-hot-reload-for-development" aria-label="Permalink to &quot;Compile and Hot-Reload for Development&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><h3 id="type-check-compile-and-minify-for-production" tabindex="-1">Type-Check, Compile and Minify for Production <a class="header-anchor" href="#type-check-compile-and-minify-for-production" aria-label="Permalink to &quot;Type-Check, Compile and Minify for Production&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><h3 id="lint-with-eslint" tabindex="-1">Lint with <a href="https://eslint.org/" target="_blank" rel="noreferrer">ESLint</a> <a class="header-anchor" href="#lint-with-eslint" aria-label="Permalink to &quot;Lint with [ESLint](https://eslint.org/)&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lint</span></span></code></pre></div>',17),n=[o];function l(r,p,d,h,c,u){return t(),a("div",null,n)}const v=e(s,[["render",l]]);export{k as __pageData,v as default};
